stages:
  - build
  - test
  - deploy

variables:
  NODE_ENV: development

# Build client (Docker image, push to Docker Hub)
build-client-image:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKERHUB_USERNAME/geolocation-client:$CI_COMMIT_SHA geolocation
    - docker push $DOCKERHUB_USERNAME/geolocation-client:$CI_COMMIT_SHA

# Build server (Docker image, push to Docker Hub)
build-server-job:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKERHUB_USERNAME/geolocation-server:$CI_COMMIT_SHA server
    - docker push $DOCKERHUB_USERNAME/geolocation-server:$CI_COMMIT_SHA
    # Optionally tag latest for convenience
    - docker tag $DOCKERHUB_USERNAME/geolocation-server:$CI_COMMIT_SHA $DOCKERHUB_USERNAME/geolocation-server:latest
    - docker push $DOCKERHUB_USERNAME/geolocation-server:latest

# Unit tests for client
unit-test-client-job:
  stage: test
  image: node:18
  needs:
    - job: build-client-image
  script:
    - cd geolocation
    - npm ci
    - npm run test

# Deploy server (via Kamal)
deploy-server-job:
  stage: deploy
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - apk add --no-cache ruby ruby-bundler ruby-dev build-base git
    - gem install kamal
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    # ðŸ‘‡ Export GitLab CI/CD vars so Kamal can read them
    - export KAMAL_REGISTRY_USERNAME="$DOCKERHUB_USERNAME"
    - export KAMAL_REGISTRY_PASSWORD="$DOCKERHUB_PASSWORD"
  script:
    - cd server
    - kamal deploy --version $CI_COMMIT_SHA
  only:
    - main